{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"REPO_NAME \u00b6 Description \u00b6 This is a short or long textual description of the package. Installation \u00b6 With Python installed, simply run the following command to add the package to your project. 1 python -m pip install PACKAGE_NAME Usage \u00b6 The following is an example usage of the package: 1 2 3 4 5 6 7 8 from foo import bar print ( \"Ok here we go\" ) try : bar () except : print ( \"Ah good effort\" ) Some info about calling the program. 1 python whatever.py > out.txt Then some output (console or file whatever) 1 Output here I guess Feel free to check out the docs for more information. License \u00b6 This software is released under the terms of MIT license .","title":"Overview"},{"location":"#repo_name","text":"","title":"REPO_NAME"},{"location":"#description","text":"This is a short or long textual description of the package.","title":"Description"},{"location":"#installation","text":"With Python installed, simply run the following command to add the package to your project. 1 python -m pip install PACKAGE_NAME","title":"Installation"},{"location":"#usage","text":"The following is an example usage of the package: 1 2 3 4 5 6 7 8 from foo import bar print ( \"Ok here we go\" ) try : bar () except : print ( \"Ah good effort\" ) Some info about calling the program. 1 python whatever.py > out.txt Then some output (console or file whatever) 1 Output here I guess Feel free to check out the docs for more information.","title":"Usage"},{"location":"#license","text":"This software is released under the terms of MIT license .","title":"License"},{"location":"reference/MODULE_NAME/","text":"Module MODULE_NAME \u00b6 A one line summary of the module or program, terminated by a period. Leave one blank line. The rest of this docstring should contain an overall description of the module or program. Optionally, it may also contain a brief description of exported classes and functions and/or usage examples. Typical usage example: 1 2 foo = ClassFoo () bar = foo . FunctionBar () View Source \"\"\"A one line summary of the module or program, terminated by a period. Leave one blank line. The rest of this docstring should contain an overall description of the module or program. Optionally, it may also contain a brief description of exported classes and functions and/or usage examples. Typical usage example: ```python foo = ClassFoo() bar = foo.FunctionBar() ``` \"\"\" def repeat_string ( s : str , n : int ) -> str : \"\"\"Repeat a string an integer number of times!\"\"\" return s * n __all__ = [ \"repeat_string\" ] Functions \u00b6 repeat_string \u00b6 1 2 3 4 def repeat_string ( s : str , n : int ) -> str Repeat a string an integer number of times! View Source def repeat_string ( s : str , n : int ) -> str : \"\"\"Repeat a string an integer number of times!\"\"\" return s * n","title":"Module Name"},{"location":"reference/MODULE_NAME/#module-module_name","text":"A one line summary of the module or program, terminated by a period. Leave one blank line. The rest of this docstring should contain an overall description of the module or program. Optionally, it may also contain a brief description of exported classes and functions and/or usage examples. Typical usage example: 1 2 foo = ClassFoo () bar = foo . FunctionBar () View Source \"\"\"A one line summary of the module or program, terminated by a period. Leave one blank line. The rest of this docstring should contain an overall description of the module or program. Optionally, it may also contain a brief description of exported classes and functions and/or usage examples. Typical usage example: ```python foo = ClassFoo() bar = foo.FunctionBar() ``` \"\"\" def repeat_string ( s : str , n : int ) -> str : \"\"\"Repeat a string an integer number of times!\"\"\" return s * n __all__ = [ \"repeat_string\" ]","title":"Module MODULE_NAME"},{"location":"reference/MODULE_NAME/#functions","text":"","title":"Functions"},{"location":"reference/MODULE_NAME/#repeat_string","text":"1 2 3 4 def repeat_string ( s : str , n : int ) -> str Repeat a string an integer number of times! View Source def repeat_string ( s : str , n : int ) -> str : \"\"\"Repeat a string an integer number of times!\"\"\" return s * n","title":"repeat_string"}]}